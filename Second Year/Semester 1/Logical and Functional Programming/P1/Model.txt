1.a. Write a predicate to determine the lowest common multiple of a list formed from integer numbers.
  b. Write a predicate to add a value v after 1-st, 2-nd, 4-th, 8-th, … element in a list.

1.a.
abs(x) = {
	x, if x>=0
	-x, otherwise
}

gcd(a,b, res) = {
	a, if b = 0
	b, if a = 0
	res = a, if a = b
	gcd(a, b-a, res), if b > a
	gcd(a-b, b, res), if a > b
}

lcm(a,b) = {
	0, if a=0 or b=0
	a*b/gcd(a,b), otherwise
}

lcm_list(l1, l2, ..., ln) = {
	l1, if n = 1
	lcm(l1, lcm_list(l2, ..., ln)), otherwise
}

1.b.
pow2(number, result) = {
	0, if the number is a power of two
	the result of the bitwise AND between number and number - 1, otherwise
}

add_after(l1, l2, ..., ln, position, v) = {
	[], if n = 0
	l1 ∪ e ∪ add_after(l2, ..., ln, position+1, v), if position is a power of two
	l1 ∪ add_after(l2, ..., ln, position+1, v), otherwise
}

lcm_list([1,2,3,4,5,6],Result1),
add_after([1,2,3,4,5,6,7,8,9],0,Result2).